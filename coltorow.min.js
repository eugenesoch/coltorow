function updateGridOrder(e,t){const n=document.createDocumentFragment();t.forEach(t=>n.appendChild(t)),e.appendChild(n),requestAnimationFrame(()=>{e.style.opacity="1"})}let originalOrder=[];function reorderAndReplaceMasonryItems(){let e=document.querySelector("[coltorow='grid']");if(!e)return void console.error("Masonry grid not found");if(e.style.opacity="0",0===originalOrder.length&&(originalOrder=Array.from(e.querySelectorAll("[coltorow='item']"))),[...originalOrder],1<=parseInt(window.getComputedStyle(e).getPropertyValue("column-count"),10)){let t=Array.from({length:parseInt(window.getComputedStyle(e).getPropertyValue("column-count"),10)},()=>[]);for(let n=0;n<originalOrder.length;n++)t[n%parseInt(window.getComputedStyle(e).getPropertyValue("column-count"),10)].push(originalOrder[n]);updateGridOrder(e,t.flat())}else console.error("Unexpected column count or no columns:",parseInt(window.getComputedStyle(e).getPropertyValue("column-count"),10))}let lastColumnCount=null;function observeColumnChanges(){let e=document.querySelector("[coltorow='grid']");if(!e)return void console.error("Masonry grid not found");const t=parseInt(window.getComputedStyle(e).getPropertyValue("column-count"),10);t!==lastColumnCount&&(reorderAndReplaceMasonryItems(),lastColumnCount=t)}let resizeTimeout;window.addEventListener("resize",()=>{clearTimeout(resizeTimeout),resizeTimeout=setTimeout(observeColumnChanges,100)}),document.addEventListener("DOMContentLoaded",()=>{let e=document.querySelector("[coltorow='grid']");e&&(e.style.opacity="0",e.style.transition="opacity 300ms ease-in-out",reorderAndReplaceMasonryItems())});